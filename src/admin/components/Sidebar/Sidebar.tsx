import React, { useState, useMemo } from "react"; // TH√äM: import useMemo
import "./Sidebar.css";
import { useNavigate, useLocation } from "react-router-dom";
import { useUser } from "../../../store/userStore";

// C·∫¨P NH·∫¨T: Kh√¥ng c·∫ßn truy·ªÅn th√¥ng tin admin qua props n·ªØa
// v√¨ ch√∫ng ta s·∫Ω l·∫•y tr·ª±c ti·∫øp t·ª´ context
interface SidebarProps {
  onItemClick: (item: string) => void;
}

const Sidebar: React.FC<SidebarProps> = ({ onItemClick }) => {
  const [showAdminOptions, setShowAdminOptions] = useState(false);

  const navigate = useNavigate();
  const location = useLocation();
  // C·∫¨P NH·∫¨T: L·∫•y to√†n b·ªô ƒë·ªëi t∆∞·ª£ng `user` v√† h√†m `logout` t·ª´ context
  // Gi·∫£ s·ª≠ `user` object c√≥ d·∫°ng: { name: '...', email: '...', avatarUrl: '...', role: 'Admin' | 'Staff' }
  const { user, logout } = useUser();

  // C·∫¨P NH·∫¨T: ƒê·ªãnh nghƒ©a t·∫•t c·∫£ c√°c item v√† vai tr√≤ ƒë∆∞·ª£c ph√©p truy c·∫≠p
  const allSidebarItems = [
    { name: "Trang t·ªïng quan", icon: "üè†", path: "/admin", roles: ["Admin", "Staff"] },
    { name: "Qu·∫£n l√Ω ng∆∞·ªùi hi·∫øn m√°u", icon: "üßë‚Äçü§ù‚Äçüßë", path: "/admin/nguoi-hien-mau", roles: ["Admin", "Staff"] },
    { name: "L·ªãch h·∫πn ng∆∞·ªùi hi·∫øn m√°u", icon: "üìÖ", path: "/admin/lich-hen", roles: ["Admin", "Staff"] },
    { name: "Qu·∫£n l√Ω kho m√°u", icon: "ü©∏", path: "/admin/kho-mau", roles: ["Admin", "Staff"] },
    { name: "X·ª≠ l√≠ y√™u c·∫ßu m√°u", icon: "üìà", path: "/admin/yeu-cau", roles: ["Admin", "Staff"] },
    // Ch·ªâ Admin m·ªõi th·∫•y 2 m·ª•c n√†y
    { name: "T·ªï ch·ª©c s·ª± ki·ªán hi·∫øn m√°u", icon: "üéâ", path: "/admin/su-kien", roles: ["Admin"] },
    { name: "Qu·∫£n l√Ω nh√¢n s·ª±", icon: "üë•", path: "/admin/nhan-su", roles: ["Admin"] },
  ];

  // C·∫¨P NH·∫¨T: D√πng useMemo ƒë·ªÉ l·ªçc c√°c item sidebar d·ª±a tr√™n vai tr√≤ c·ªßa ng∆∞·ªùi d√πng
  // Danh s√°ch n√†y s·∫Ω ch·ªâ ƒë∆∞·ª£c t√≠nh to√°n l·∫°i khi `user.role` thay ƒë·ªïi
  const sidebarItems = useMemo(() => {
    if (!user?.role) return []; // N·∫øu kh√¥ng c√≥ user ho·∫∑c role, tr·∫£ v·ªÅ m·∫£ng r·ªóng
    return allSidebarItems.filter(item => item.roles.includes(user.role));
  }, [user?.role]);


  const logoUrl = "https://cdn.dribbble.com/userupload/26255768/file/original-de01cccd8c317f5acaea9f43e9b3c71f.png?resize=752x&vertical=center";

  const handleProfileClick = () => {
    setShowAdminOptions(false);
    navigate('/ho-so');
  };

  const onLogoutClick = () => {
    setShowAdminOptions(false);
    if (logout) {
      logout();
    }
    navigate('/dang-nhap');
  };

  // N·∫øu kh√¥ng c√≥ user, c√≥ th·ªÉ hi·ªÉn th·ªã m·ªôt sidebar r·ªóng ho·∫∑c loading
  if (!user) {
    return <aside className="sidebar"></aside>;
  }

  return (
    <aside className="sidebar">
      <div className="logoContainer" onClick={() => navigate('/')} style={{ cursor: 'pointer' }}>
        <img src={logoUrl} alt="Company Logo" className="logo" />
      </div>

      <ul className="sidebarList">
        {/* C·∫¨P NH·∫¨T: Map qua danh s√°ch ƒë√£ ƒë∆∞·ª£c l·ªçc */}
        {sidebarItems.map((item) => (
          <li
            key={item.name}
            className={`sidebarItem ${location.pathname === item.path ? "active" : ""}`}
            onClick={() => {
              onItemClick(item.name);
              navigate(item.path);
            }}
          >
            <span>{item.icon}</span>
            <span>{item.name}</span>
          </li>
        ))}
      </ul>

      {/* C·∫¨P NH·∫¨T: L·∫•y th√¥ng tin hi·ªÉn th·ªã t·ª´ `user` context */}
      <div className="adminInfo">
        <img src={user.avatarUrl} alt={user.name} className="adminAvatar" />
        <div className="adminText">
          <div className="adminName">{user.fullName}</div>
          <div className="adminEmail">{user.email}</div>
        </div>
        <span className="settingsIcon" onClick={() => setShowAdminOptions(prev => !prev)}>
          ‚öôÔ∏è
        </span>
        {showAdminOptions && (
          <div className="adminOptions show">
            <div className="optionItem" onClick={handleProfileClick}>
              Xem H·ªì s∆°
            </div>
            <div className="optionItem" onClick={onLogoutClick}>
              ƒêƒÉng xu·∫•t
            </div>
          </div>
        )}
      </div>
    </aside>
  );
};

export default Sidebar;